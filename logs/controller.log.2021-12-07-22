[2021-12-07 22:04:02,791] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:04:02,793] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:04:02,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:04:02,797] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:05:00,186] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2021-12-07 22:05:00,187] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2021-12-07 22:05:00,187] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2021-12-07 22:05:00,190] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my-first-topic-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my-sec-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my-first-topic-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my-first-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2021-12-07 22:05:01,307] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-07 22:05:01,308] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-07 22:05:01,308] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-07 22:05:01,308] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2021-12-07 22:05:01,308] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-12-07 22:05:01,309] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2021-12-07 22:05:01,309] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2021-12-07 22:05:01,310] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2021-12-07 22:05:01,310] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2021-12-07 22:05:01,310] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2021-12-07 22:05:01,311] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2021-12-07 22:05:12,208] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7bfcd12c, name=log4j:logger=kafka.controller (kafka.controller)
[2021-12-07 22:05:32,262] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-07 22:05:32,283] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2021-12-07 22:05:32,285] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2021-12-07 22:05:32,290] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-12-07 22:05:32,293] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-12-07 22:05:32,295] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2021-12-07 22:05:32,309] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 226) (kafka.controller.KafkaController)
[2021-12-07 22:05:32,324] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2021-12-07 22:05:32,370] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2021-12-07 22:05:32,377] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2021-12-07 22:05:32,379] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2021-12-07 22:05:32,379] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-12-07 22:05:32,379] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-sec-topic, my-first-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2021-12-07 22:05:32,380] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-12-07 22:05:32,392] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-12-07 22:05:32,394] INFO [Controller id=1] List of topics ineligible for deletion: my-first-topic,my-sec-topic,__consumer_offsets (kafka.controller.KafkaController)
[2021-12-07 22:05:32,395] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-12-07 22:05:32,395] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(my-first-topic, my-sec-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2021-12-07 22:05:32,396] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2021-12-07 22:05:32,421] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-12-07 22:05:32,427] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-12-07 22:05:32,432] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-12-07 22:05:32,436] INFO [RequestSendThread controllerId=1] Controller 1 connected to tuyen-laptop:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-07 22:05:32,577] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=my-first-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=my-sec-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=my-first-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=my-first-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2021-12-07 22:05:32,577] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-12-07 22:05:32,581] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-12-07 22:05:32,644] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, my-first-topic-2 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, my-sec-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, my-first-topic-1 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, my-first-topic-0 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2021-12-07 22:05:32,644] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2021-12-07 22:05:32,648] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-12-07 22:05:32,648] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-12-07 22:05:32,648] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-12-07 22:05:32,648] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-12-07 22:05:32,649] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-12-07 22:05:32,655] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-12-07 22:05:37,658] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:05:37,659] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:05:37,675] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-22 -> List(0), __consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), my-sec-topic-0 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), my-first-topic-0 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), my-first-topic-2 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-39 -> List(0), my-first-topic-1 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0)) (kafka.controller.KafkaController)
[2021-12-07 22:05:37,677] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2021-12-07 22:05:37,683] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2021-12-07 22:05:49,479] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2021-12-07 22:05:49,479] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2021-12-07 22:05:49,482] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2021-12-07 22:05:49,484] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2021-12-07 22:05:49,488] INFO [RequestSendThread controllerId=1] Controller 1 connected to tuyen-laptop:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-07 22:05:49,524] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2021-12-07 22:05:49,525] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 226, 2 -> 315) (kafka.controller.KafkaController)
[2021-12-07 22:05:49,538] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-07 22:05:49,551] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2021-12-07 22:06:34,533] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2021-12-07 22:06:34,533] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-12-07 22:06:34,537] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2021-12-07 22:06:34,538] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2021-12-07 22:06:34,544] INFO [RequestSendThread controllerId=1] Controller 1 connected to tuyen-laptop:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-07 22:06:34,612] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-07 22:06:34,637] DEBUG [Controller id=1] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2021-12-07 22:06:34,642] INFO [Controller id=1] Updated broker epochs cache: HashMap(0 -> 331, 1 -> 226, 2 -> 315) (kafka.controller.KafkaController)
[2021-12-07 22:06:34,651] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2021-12-07 22:10:37,683] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:10:37,683] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:10:37,686] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:10:37,686] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:15:37,686] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:15:37,686] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:15:37,687] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:15:37,687] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:20:30,585] INFO [Controller id=1] New topics: [Set(new-kafka-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(new-kafka-topic,Some(tDEzl3uMQ9abySARWhmx4Q),HashMap(new-kafka-topic-3 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), new-kafka-topic-0 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), new-kafka-topic-1 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), new-kafka-topic-4 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), new-kafka-topic-2 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2021-12-07 22:20:30,586] INFO [Controller id=1] New partition creation callback for new-kafka-topic-3,new-kafka-topic-0,new-kafka-topic-1,new-kafka-topic-4,new-kafka-topic-2 (kafka.controller.KafkaController)
[2021-12-07 22:20:30,611] INFO [RequestSendThread controllerId=1] Controller 1 connected to tuyen-laptop:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-07 22:20:30,611] INFO [RequestSendThread controllerId=1] Controller 1 connected to tuyen-laptop:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-07 22:20:30,611] INFO [RequestSendThread controllerId=1] Controller 1 connected to tuyen-laptop:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-07 22:20:37,687] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:20:37,687] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:20:37,689] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:20:37,689] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:20:37,689] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:20:37,689] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:20:37,689] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:20:37,689] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:25:37,690] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:25:37,690] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:25:37,694] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:25:37,694] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:25:37,695] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:25:37,695] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:25:37,695] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:25:37,695] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:30:37,695] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:30:37,695] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:30:37,698] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:30:37,699] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:30:37,699] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:30:37,699] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:30:37,699] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:30:37,699] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:35:37,700] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:35:37,700] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:35:37,703] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:35:37,703] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:35:37,703] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:35:37,703] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:35:37,703] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:35:37,703] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:40:37,704] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:40:37,704] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:40:37,705] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:40:37,705] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:40:37,705] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:40:37,705] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:40:37,705] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:40:37,705] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:45:37,705] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:45:37,705] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:45:37,706] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:45:37,706] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:45:37,706] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:45:37,706] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:45:37,706] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:45:37,706] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:50:37,707] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:50:37,708] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:50:37,709] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:50:37,710] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:50:37,710] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:50:37,710] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:50:37,710] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:50:37,710] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:55:37,710] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-07 22:55:37,710] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-07 22:55:37,712] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:55:37,712] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:55:37,712] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:55:37,712] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-12-07 22:55:37,712] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-12-07 22:55:37,713] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
